//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DriveParts.Entities
{
    using System.Windows;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    
    public partial class DrivePartsEntities : DbContext
    {
        public static DrivePartsEntities _context;

        public DrivePartsEntities()
            : base("name=DrivePartsEntities")
        {
        }

        private static bool CheckConnection()
        {
            try
            {
                DrivePartsEntities database = new DrivePartsEntities();
                database.Database.Connection.Open();
                return true;
            }
            catch
            {
                MessageBox.Show("Отсутствует соединение с сервером");
                return false;
            }
        }

        public static DrivePartsEntities GetContext()
        {
            if (!CheckConnection())
            {
                System.Diagnostics.Process.Start(Application.ResourceAssembly.Location);
                Application.Current.Shutdown();
            }
            if (_context == null)
            {
                _context = new DrivePartsEntities();
            }
            return _context;
        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Brand> Brand { get; set; }
        public virtual DbSet<Category> Category { get; set; }
        public virtual DbSet<Customer> Customer { get; set; }
        public virtual DbSet<Delivery> Delivery { get; set; }
        public virtual DbSet<Order> Order { get; set; }
        public virtual DbSet<OrderStatus> OrderStatus { get; set; }
        public virtual DbSet<PaymentMethod> PaymentMethod { get; set; }
        public virtual DbSet<Product> Product { get; set; }
        public virtual DbSet<ProductImage> ProductImage { get; set; }
        public virtual DbSet<Provider> Provider { get; set; }
        public virtual DbSet<Purchase> Purchase { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<User> User { get; set; }
    }
}
